<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TJU羽毛球场地预约程序思路</title>
      <link href="2021/02/21/tjubook/"/>
      <url>2021/02/21/tjubook/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文并非原创文章！下文转自网络一位老学长的文章，具体出处无从查找。仅仅是整理了MD格式使得文章更加readable。</p><h2 id="写作动机"><a href="#写作动机" class="headerlink" title="写作动机"></a>写作动机</h2><p>近期作者疏于运动，加上吃得又多，打篮球天冷，所以想去室内打打羽毛球，锻炼一下身体，生命在于运动嘛，毕竟学计算机的人一天到晚地待在实验室对着电脑对身体不好。但是白天又没时间，所以就想着约个晚上的羽毛球场地，本来想着场地很好约，就没当回事，偶尔闲暇想起来的时候去预约网站上看一下，可没成想，接连好几天都显示无剩余场地可约…比较生气，遂写此文，<strong>以抒心中不平</strong>!</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>天津大学场馆中心预定平台对于大家来讲应该都不陌生，该平台对外提供羽毛球、排球、篮球等场馆的在线预约服务，其目的是为了减少大家使用场地时的冲突，方便师生进行体育锻炼。然而，<strong>场地是有限的</strong>，面对大家日益增长的物质和文化需求，现有的场地资源已经显得力不从心，难以满足大家的需求，<strong>抢订场地的现象也逐渐蔚然成风</strong>。为了探究现有场馆的使用情况，本篇文章利用爬虫等技术进行了北洋园校区羽毛球馆场地预定数据的统计和分析，并分析了预定平台现有的工作流程和不足之处，并基于此研究设计和开源了一套自动预约软件，同时为预定平台中心建设提出了一些改进建议，希望减少脚本抢订等不公平现象的发生。</p><h2 id="一、羽毛球馆场地预约现状"><a href="#一、羽毛球馆场地预约现状" class="headerlink" title="一、羽毛球馆场地预约现状"></a>一、羽毛球馆场地预约现状</h2><h3 id="1-1-预约时间段和场地热度分析"><a href="#1-1-预约时间段和场地热度分析" class="headerlink" title="1.1 预约时间段和场地热度分析"></a>1.1 预约时间段和场地热度分析</h3><p>羽毛球场馆共计12个场地，其中1-8号场地位于场馆主场，9-12号场地位于东侧跑道附件的次场。当然了，大家都知道的嘛，主场的场地空间和相关照明设施要更好一点。每个场地都有使用时间段限制，通常以1小时为单位，从早晨8:00到晚上10:00，同时有些场地由于上课等其他事情的需要，开放时间段有固定限制。场地预定平台每天中午12:00开放后天的场地预定，比如周一中午12:00后可以预约周三的场地，因此类推。下图展示了某日中午12:30的可预约场地截图，红圈标明的地方是晚上7:00-9:00的场地，已经显示无场地可以用或者只剩下次场，而其他时间段的场地余量却比较充裕，我们可以猜测是晚间段的场地比较热门导致了<font color="red"><strong>时间不平衡性</strong></font>的出现。</p><img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/E8867512FD2A4C55A3FF563847F4E414/6330"><p>为了验证猜测，我们采用爬虫对该网页的数据进行定期抓取，每天中午12:00统计昨日场地的剩余情况，将得到的信息绘制出来，如图1、2所示。图1展示了周一至周日羽毛球馆14个时间段场地的预约率，x轴代表每周天数，y轴代表每天的14个时间段，以小时为单位，z轴为标准化后的场地预定率 (e.g. 11/12=0.916，8/8=1)，预定率越高代表该时间段来打球的人越多。我们将三维图投影到xy平面上，如图3所示。可以很明显得看出：</p><ol><li>白天和晚上的差距就更为明显，也表明大部分同学也<font color="red"><strong>更倾向于晚上去场馆打球</strong></font>。</li><li><font color="red"><strong>晚上19:00-21:00的时段最为热门</strong></font>，而同样是晚间的21:00-22:00相对来讲场地比较宽松一些，可能是由于场馆22:00闭馆的原因导致大家不愿意玩到太晚。</li><li><font color="red"><strong>上午场的人数很少</strong></font>，可能是由于上午大家基本都有功课要上，没有精力来体育馆打球。周六也出现了这种现象，而出现这种情况的原因大概是由于<font color="red"><strong>睡懒觉</strong></font>。</li></ol><img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/DCE57026388C4EF5A1967ABFE6B88686/7728"> <img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/5C5B90643E324B0CBC8E8216BE05DC04/7720"><h3 id="1-2-热门场地竞争性分析"><a href="#1-2-热门场地竞争性分析" class="headerlink" title="1.2 热门场地竞争性分析"></a>1.2 热门场地竞争性分析</h3><p>基于上述的热点时段研究，我们可以得出晚上19:00-21:00时间段比较热门的结论，这也与我们的常识一致，但是这个时间段究竟有多热门呢？亦或者说这些时间段内的场地多久会被大家抢光？</p><p>针对这个问题，我们又抓取了每日12:00开放预约后的网页数据，每隔30秒钟采样，用下一个时间点采到的数据减去上一个时间点的数据就可以得出在这30秒的间隔内有多少场地被预约走，根据此方法，我们绘制了19:00-20:00的8个主场地的预约变化曲线，如图3、4所示，x轴代表时间，y轴代表8个主场地剩余量，蓝色数据点为多次采样的平均值，红色虚线为拟合曲线，我们可以发现：</p><ol><li><font color="red"><strong>场地剩余曲线呈现先快后慢的变化</strong></font>，开放预定的前5分钟，已经有一半的场地被预定走，说明抢订的人还是蛮多的。</li><li>开放预定的前10秒内，已经有场地被预约走，有<font color="red"><strong>很大的可能性存在脚本预约</strong></font>的情况，这个结论图上反映得不太直观，因为采样存在时间延迟，而且事实上预约开放并不是准时的12点0分0秒，这里会在后面叙述。</li><li>8个主场<font color="red"><strong>基本在30分钟内被订光</strong></font>，意思就是如果你不盯着时间点去抢订，能抢到漏网之鱼的几率很小。</li></ol><p><img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/74464435AC7A48C3BF9F9802C5319232/7719"> <img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/5AA79032341F436A8EDCCBDE960025C2/7722"></p><p>文章写到这里，我们可以看<strong>到羽毛球黄金时段的主场地资源匮乏确实很严重</strong>，加上有些脚本抢场的存在，想提前预定上期待的场地可谓难上加难，而且大家也都没有那么多的时间去盯着天天盯着场地。但是，着急上火也没有用，毕竟你也管不了有些人(或者机器)，不过也不是没有办法，对付这些抢场地的最有效手段就是跟他们对着抢，就看谁的程序好、网速快了。第二章我将详细讲述如何去分析场地预定工作流程并编写程序帮我们去实现小目标。</p><h2 id="二、预备知识"><a href="#二、预备知识" class="headerlink" title="二、预备知识"></a>二、预备知识</h2><h3 id="2-1-啥是爬虫？？？"><a href="#2-1-啥是爬虫？？？" class="headerlink" title="2.1 啥是爬虫？？？"></a>2.1 啥是爬虫？？？</h3><p>互联网提供的服务大多数是以网站的形式提供的，而我们需要的数据一般都是从网页中获取的，如电商网站商品信息、商品的评论、微博的信息等。网站的网页是由HTML代码组成的，我们平时通过浏览器访问网页，发出请求后浏览器接收到对应的网页源代码，然后将其解析为页面内容再呈现给我们。</p><p>通俗来讲，<strong>爬虫的基本原理很简单，就是利用程序去代替人去访问网站，并将目标数据保存下来</strong>。爬虫当中涉及到的知识点大概如下，学计算机的人应该不会陌生，这个到后面会一一用到，我们继续往下走。</p><p>web后端知识，GET/POST，session等<br>前端HTML、javascript等<br>Java Httpclient使用<br>Jsoup页面解析包<br>正则表达式<br>Timer定时器<br>Java mail包使用<br>注意：未打钩代表可选用</p><h3 id="2-2-如何用程序去模拟浏览器访问网站？"><a href="#2-2-如何用程序去模拟浏览器访问网站？" class="headerlink" title="2.2 如何用程序去模拟浏览器访问网站？"></a>2.2 如何用程序去模拟浏览器访问网站？</h3><p>通常我们访问网站需要一个浏览器(e.g. IE，搜狗，谷歌)，但是程序要想去访问网站，当然需要模拟出来一个浏览器（呃…其实浏览器本身也是程序写的），设计思路就是通过计算机程序来<strong>模拟出一个用户和浏览器，去替代人工进行场地预定</strong>。</p><p>话还没说完，出自于Java的Httpclient包就迫不及待地跳了出来，Httpclient包就是一个专门用于模拟浏览器的java工具包，使用起来也很简单，这里我们用一下小例子来演示下它的使用过程。首先，假设我们需要爬取体育馆预约平台首页的源代码，则需要引入Java的HttpClient包，新建一个httpclient对象，这个对象就相当于一个虚拟浏览器，通过链接发送请求，从而获取到数据，二话不说，上代码：</p><pre class="line-numbers language-none"><code class="language-none">import org.apache.http.impl.client.*;&#x2F;*** 爬虫之httpclient使用Demo*&#x2F;public class CrawDemo &#123;public static void main(String[] args) &#123;CloseableHttpClient httpClient &#x3D; HttpClients.createDefault();&#x2F;&#x2F;建立一个新的请求客户端HttpGet httpGet &#x3D; new HttpGet(&quot;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Login&#x2F;index.html&quot;); &#x2F;&#x2F;使用HttpGet方式请求网址CloseableHttpResponse response &#x3D; null;try &#123;response &#x3D; httpClient.execute(httpGet); &#x2F;&#x2F;获取网址的返回结果HttpEntity entity &#x3D; response.getEntity(); &#x2F;&#x2F;获取返回结果中的实体System.out.println(EntityUtils.toString(entity)); &#x2F;&#x2F;将返回的实体输出EntityUtils.consume(entity); &#x2F;&#x2F;关闭实体与连接&#125; catch (IOException e) &#123;e.printStackTrace();&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然，这就是我们需要的网址对应的页面的源代码，于是我们的第一个爬虫demo就演示完毕了。</p><pre class="line-numbers language-none"><code class="language-none">&lt;html&gt; &lt;head&gt;&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot; &#x2F;&gt;&lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;7&quot;&gt;&lt;title&gt;场馆中心&lt;&#x2F;title&gt;&lt;link href&#x3D;&quot;&#x2F;Public&#x2F;Book&#x2F;css&#x2F;login.css&quot; charset&#x3D;&quot;utf-8&quot; type&#x3D;&quot;text&#x2F;css&quot; rel&#x3D;&quot;stylesheet&quot; &#x2F;&gt;&lt;script src&#x3D;&quot;&#x2F;Public&#x2F;Book&#x2F;js&#x2F;jquery-1.7.2.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot; &gt;&lt;&#x2F;script&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt; $(document).ready(function()&#123; &#x2F;&#x2F;登陆验证 $(&quot;\#logBtn&quot;).click(function()&#123; var data &#x3D; new Object(); $.ajax(&#123; url: &quot;&#x2F;index.php&#x2F;Book&#x2F;Login&#x2F;authCheck.html&quot;, data: data, type:&quot;post&quot;, success: function (text) &#123; if(text&#x3D;&#x3D;&quot;SUCCESS&quot;)&#123; location.href&#x3D;&quot;&#x2F;index.php&#x2F;Book&#x2F;Book&#x2F;index.html&quot;; &#125;else&#123; alert(‘账号或密码输入错误‘); &#125; &#125;, &#125;); &#125;); $(&quot;\#confirmBtn&quot;).click(function()&#123; location.href &#x3D; &quot;https:&#x2F;&#x2F;sso.tju.edu.cn&#x2F;cas&#x2F;login?service&#x3D;&quot;+encodeURI(location); &#125;); &#125;); &lt;&#x2F;script&gt;&lt;&#x2F;head&gt;&lt;body class&#x3D;&quot;p-body&quot;&gt;&lt;div class&#x3D;&quot;m-logbg&quot; id&#x3D;&quot;m-logbg&quot;&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;m-loginTab&quot;&gt;&lt;ul&gt;&lt;li style&#x3D;&quot;text-align:left; padding-left:15%;&quot;&gt;&lt;img src&#x3D;&quot;&#x2F;Public&#x2F;Book&#x2F;images&#x2F;tjuLogo.png&quot; &#x2F;&gt;&lt;&#x2F;li&gt;&lt;li&gt;&lt;img src&#x3D;&quot;&#x2F;Public&#x2F;Book&#x2F;images&#x2F;loginLogo.png&quot; height&#x3D;&quot;200&quot; border&#x3D;&quot;0&quot; &#x2F;&gt;&lt;&#x2F;li&gt;&lt;li&gt;&lt;div id&#x3D;&quot;loginTab&quot;&gt;&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; id&#x3D;&quot;name&quot; &#x2F;&gt;&amp;nbsp;&lt;&#x2F;body&gt; &lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>虽然我们已经使用HttpClient请求成功一个简单的网页。但是，在实际中有很多网页的请求需要附带许多参数设置。在HttpClient 4.3及以上的版本中，这个过程主要包含如下步骤：</p><p>使用List<NameValuePair>添加请求参数<br>使用URI对请求路径及其参数进行组合<br>使用List<Header>设置请求的头部，header相当于设置构造的虚拟浏览器的各项属性（可以理解为其更像真的浏览器）<br>初始化自定义的HttpClient客户端，并设置header<br>使用HttpUriRequest设置请求<br>使用HttpClient请求上述步骤中的HttpUriRequest对象<br>这些步骤会在后面进行详细演示，<font color="red"><strong>看不懂也没关系</strong></font>。</Header></NameValuePair></p><h3 id="2-3-程序是如何得到网页数据的"><a href="#2-3-程序是如何得到网页数据的" class="headerlink" title="2.3 程序是如何得到网页数据的?"></a>2.3 程序是如何得到网页数据的?</h3><p>2.1节我们获取了一个示例页面的HTML源代码，但是这些源码是提供给浏览器解析用的，我们只对页面上标题、时间、数量有用的信息感兴趣，至于乱七八糟的标签之类的东西我们不要。自己写程序解析也不是不可以，不过就是太费劲，这里推荐一款Java的HTML解析器Jsoup，其主要的功能包括解析HTML页面，通过属性名或者id查找、提取数据等。<strong>轮子别人已经造好了</strong>，我们直接拿着用就可以，下面通过一个示例来说明下它的用法，假设我们有个HTML页面的内容如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;html&gt; &lt;div id&#x3D;&quot;list&quot;&gt; &lt;div class&#x3D;&quot;title&quot;&gt; &lt;a href&#x3D;&quot;url1&quot;&gt;第一篇文章&lt;&#x2F;a&gt; &lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;title&quot;&gt; &lt;a href&#x3D;&quot;url2&quot;&gt;第二篇文章&lt;&#x2F;a&gt; &lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;title&quot;&gt; &lt;a href&#x3D;&quot;url3&quot;&gt;第三篇文章&lt;&#x2F;a&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;&#x2F;html&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用Jsoup编写规则对每个标题的链接进行解析，整个HTML代码中有一个id=list的父div，其包含3个class=title的子div，每个子div里各包含一个链接和一个标题，解析代码如下：</p><pre class="line-numbers language-none"><code class="language-none">Document doc &#x3D; Jsoup.parse(rawHTML); &#x2F;&#x2F;将当前页面转换成Jsoup的Document对象Elements List &#x3D; doc.select(&quot;divid&#x3D;list&quot;).select(&quot;divclass&#x3D;title&quot;); &#x2F;&#x2F;获取所有的父id&#x3D;list且其class&#x3D;title的div标签for( Element element : List )&#123; &#x2F;&#x2F;针对每个符合条件的元素进行解析，并输出String url &#x3D; element.select(&quot;a&quot;).attr(&quot;href&quot;);System.out.println(&quot;Url:\t&quot;+url);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果如下，关于Jsoup的简介就是这些，具体的使用可以单独去学习JSoup的规则，==这里(作)不(者)再(太)讲(懒)解==…</p><pre class="line-numbers language-none"><code class="language-none">Url: url1Url: url2Url: url3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-4-Chrome网页调试工具有啥用？"><a href="#2-4-Chrome网页调试工具有啥用？" class="headerlink" title="2.4 Chrome网页调试工具有啥用？"></a>2.4 Chrome网页调试工具有啥用？</h3><p>为什么要讲Chrome网页调试工具呢，一般不做网站开发的人基本用不着它，但是要做爬虫就必须…什么？老夫2000000行编码经验，岂会用到这种东西。你确定不用？不用！<strong>嗯，真香…</strong></p><p>Chrome的网页调试工具可以追踪请求的调用过程和附带的参数等信息，通俗来讲，就是可以让我们知道我们访问网页的时候浏览器干了啥，发出去了什么东西，又接收到了什么东西。比如网站登录的时候通常采用POST的形式向服务器发送请求，并将用户名和密码等参数一同发送过去进行验证。这些参数我们在浏览器的链接栏里是看不到的，因此需要抓包工具获取并分析。这里我举出了一个体育馆预定平台登录的抓包分析过程，作为示例演示。</p><p>首先使用浏览器访问：<a href="http://cgzx.tju.edu.cn:8080/index.php/Book/Book/index">http://cgzx.tju.edu.cn:8080/index.php/Book/Book/index</a> 页面，鼠标右键选择”检查”，浏览器会打开调试界面，如下图所示，勾选”Preserve log”，这样页面一旦跳转，可以保存请求的日志，之后输入账号和密码，点击”登录”按钮，</p><img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/8FA08B1E1DBE4C00B31BDE651DA377FB/7127">登录成功后我们可以进入到欢迎页面，这时候调试工具窗口发生了如下变化，红圈表示的是刚刚登录请求的链接和相关的参数信息，如下图所示，这里包含的信息到下一章会具体用到，**这里给你们讲了也不明白，索性不讲了...**<img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/8735DE3AE7D340F892D4AE111D10A766/7129"><h2 id="三、场地预定流程分析"><a href="#三、场地预定流程分析" class="headerlink" title="三、场地预定流程分析"></a>三、场地预定流程分析</h2><p>俗话说，<font color="red"><strong>知己知彼，百战不殆</strong></font>，在我们用写代码抢场地之前，肯定要弄清楚整个过程的工作原理。首先，我们用浏览器去正常的访问预定平台，这个过程对于使用过的同学来讲都不陌生，我们可以绘制一个流程图来说明该过程以及每一步的作用。如下图所示，箭头表示流程走向。</p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB    A登录系统--&gt;|1.携带账号密码|B    B选择羽毛球预约--&gt;|携带球种类参数|C    C选择北洋园校区--&gt;|携带校区参数|D    D查看可供预定的时段--&gt;E    E选择时间段和日期--&gt;|携带日期和时间段参数|F    F查询并选择可用场地--&gt;|携带场地编号参数|G    G确认预约--&gt;|携带预约表单信息|H    H&#123;处理并返回结果&#125;--&gt;|成功&#x2F;失败|D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个步骤访问的链接如下表所示：</p><table><thead><tr><th align="center">步骤</th><th align="center">请求类型</th><th align="center">访问链接</th></tr></thead><tbody><tr><td align="center">登录</td><td align="center">POST</td><td align="center">/Book/Login/authCheck.html</td></tr><tr><td align="center">选择羽毛球预约</td><td align="center">GET</td><td align="center">/Book/Book/index1.html?cg=01</td></tr><tr><td align="center">选择校区</td><td align="center">GET</td><td align="center">/Book/Book/index2.html?cg=01&amp;cp=02</td></tr><tr><td align="center">选择时间段和日期</td><td align="center">GET</td><td align="center">/Book/Book/index3?day=2018-01-01&amp;time=00001&amp;cg=01&amp;cp=02</td></tr><tr><td align="center">选择场地</td><td align="center">GET</td><td align="center">/Book/Book/index3?day=2018-01-01&amp;time=00001&amp;cg=01&amp;cp=02&amp;cdinfoid=2201</td></tr><tr><td align="center">提交预定信息</td><td align="center">POST</td><td align="center">/Book/Book/order.htm</td></tr><tr><td align="center">注销</td><td align="center">POST</td><td align="center">/Book/Login/logout</td></tr><tr><td align="center">上述链接中的参数解释：</td><td align="center"></td><td align="center"></td></tr></tbody></table><ol><li>cg代表羽毛球种类编号，即01</li><li>cp代表北洋园校区编号，即02</li><li>day代表日期，time代表预定时段，00001代表8:00-9:00场，因此类推，每过1个小时加1</li><li>cdinfoid代表场地，2201代表1号场，因此类推，每个场次加1</li></ol><p>注意：1-4条解释的是GET请求，而提交预定信息采用的POST请求，包含参数较多，在后面会详细解释。<br>POST和GET有啥区别？简单来讲，它们是web请求的两种形式，GET的链接在浏览器地址栏里可以看到，POST的不让你看，为啥不让看？安全呗。</p><h2 id="四、程序设计与实现"><a href="#四、程序设计与实现" class="headerlink" title="四、程序设计与实现"></a>四、程序设计与实现</h2><p><font color="red"><strong>拿破仑爷爷说过，不会写代码的学生不是好学生</strong></font>，好了，贴代码…</p><h3 id="4-1-为什么要模拟登录？"><a href="#4-1-为什么要模拟登录？" class="headerlink" title="4.1 为什么要模拟登录？"></a>4.1 为什么要模拟登录？</h3><p>就前面两章写的httpclient使用，Jsoup解析要是直接拿来去定场地，还不够用。为什么呢？你会发现不管是查询时间，还是预定场地，访问第三章表里的哪个链接都出不来数据，学到的这点儿三脚猫功夫还真不行，原因就在于体育馆的预定系统需要登录后才能进行访问操作，不过这也难不倒作者<font color="red"><strong>愤怒的内心</strong></font>，既然需要登录授权，那我们就利用httpclient进行模拟登录，具体实施在4.2节会详细叙述。</p><h3 id="4-2-登录实现与cookie保存"><a href="#4-2-登录实现与cookie保存" class="headerlink" title="4.2 登录实现与cookie保存"></a>4.2 登录实现与cookie保存</h3><p>这里要感谢当时制作平台的相关人员，没有加入验证码，也就为我们免去了验证码识别的麻烦，任务难度就低了一个等级。这里先观察下3.1节里提到的登录页面的源代码的JavaScript代码，如下所示，</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;登陆验证$(&quot;#logBtn&quot;).click(function()&#123;&#x2F;&#x2F; alert(111);var data &#x3D; new Object();data.name &#x3D; $(&quot;#name&quot;)0;data.pwd &#x3D; $(&quot;#password&quot;)0;$.ajax(&#123;url: &quot;&#x2F;index.php&#x2F;Book&#x2F;Login&#x2F;authCheck.html&quot;,data: data,type:&quot;post&quot;,success: function (text) &#123;if(text&#x3D;&#x3D;&quot;SUCCESS&quot;)&#123;location.href&#x3D;&quot;&#x2F;index.php&#x2F;Book&#x2F;Book&#x2F;index.html&quot;;&#125;else&#123;alert(‘账号或密码输入错误‘);&#125;&#125;,error: function (jqXHR, textStatus, errorThrown) &#123;alert(jqXHR.responseText);&#125;&#125;);&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以发现登录采用的是ajax异步请求的方式，请求的路径是”/index.php/Book/Login/authCheck.html”，请求方式是POST请求，封装了用户输入的用户名和密码，如果登录成功，返回”SUCCESS”字符串，页面跳转到”/index.php/Book/Book/index.html”，也就是主页，不成功就弹窗提升。</p><p>什么是ajax？就是页面数据异步刷新技术，通俗讲就是页面不跳转，就能实现跟后台的数据交换。</p><p>不过单独靠这些信息是无法保证成功登录的，那怎么办？当然是要祭出我们的<font color="red"><strong>大杀器Chrome调试工具</strong></font>了，我们展开3.3节里控制台输出的信息，如下图所示，请注意蓝色方框里的数据，分别是request header信息和携带的form表单数据，账号和密码做了==马赛克处理==，所以是不可能给你们看的。</p><img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/DCCE396FF59B413993DA592547AA8639/7354">接下来，我们来编码实现模拟登录，主要步骤是构造一个httpclient对象，然后按照request header的属性给它赋值，从而把这个<font color="red">**假的浏览器包装的和真的一模一样**</font>（能骗过预定系统的后台服务器就行），之后封装好用户名和密码两个参数，发送登录请求，实现登录。代码如下：<pre class="line-numbers language-none"><code class="language-none">CloseableHttpClient client &#x3D; HttpClientBuilder.create().build();&#x2F;&#x2F;创建CloseableHttpClient对象HttpPost post &#x3D; new HttpPost(Repository.loginUrl); &#x2F;&#x2F;采用post方式的发送请求&#x2F;&#x2F;包装模拟浏览器请求头post.setHeader(HttpHeaders.ACCEPT, &quot;*&#x2F;*&quot;);post.setHeader(HttpHeaders.ACCEPT_ENCODING, &quot;gzip, deflate&quot;);post.setHeader(HttpHeaders.ACCEPT_LANGUAGE, &quot;zh-TW,zh;q&#x3D;0.9,en-US;q&#x3D;0.8,en;q&#x3D;0.7,zh-CN;q&#x3D;0.6&quot;);post.setHeader(HttpHeaders.CONNECTION, &quot;keep-alive&quot;);post.setHeader(HttpHeaders.CONTENT_TYPE, &quot;application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8&quot;);post.setHeader(HttpHeaders.HOST, &quot;cgzx.tju.edu.cn:8080&quot;);post.setHeader(&quot;Origin&quot;, &quot;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&quot;);post.setHeader(HttpHeaders.REFERER, &quot;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Login&#x2F;index.html&quot;);post.setHeader(HttpHeaders.USER_AGENT, &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;68.0.3440.84 Safari&#x2F;537.36&quot;);post.setHeader(&quot;X-Requested-With&quot;, &quot;XMLHttpRequest&quot;);&#x2F;&#x2F;封装请求参数List&lt;NameValuePair&gt; formparams &#x3D; new ArrayList&lt;NameValuePair&gt;();formparams.add(new BasicNameValuePair(&quot;name&quot;,bean.getUserName()));formparams.add(new BasicNameValuePair(&quot;pwd&quot;,bean.getPassword()));HttpEntity reqEntity &#x3D; new UrlEncodedFormEntity(formparams, &quot;utf-8&quot;);post.setEntity(reqEntity);post.setConfig(RequestConfig.custom().setConnectTimeout(5000).build());&#x2F;&#x2F;发送请求HttpClientContext httpClientContext &#x3D; HttpClientContext.create();HttpResponse response &#x3D; client.execute(post,httpClientContext);&#x2F;&#x2F;接受响应数据if(response.getStatusLine().getStatusCode()&#x3D;&#x3D;200)&#123;HttpEntity resEntity&#x3D;response.getEntity();String message &#x3D; EntityUtils.toString(resEntity, &quot;utf-8&quot;);System.out.println(&quot;log in &quot;+message);&#125;else&#123;System.out.println(&quot;log in error&quot;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码就可以实现模拟登录了，登录成功之后收到的message变量值为”SUCCESS”，要是你的密码写错了，会返回”FAILED”，到这里还结束，提到登录往往关联着session会话保持，如果不想每次都登录，可以将session保存下来，客户端叫做cookie的东西可以保存这些信息。</p><p>什么是session？session记录着用户的登录状态，比如登录一次就可以不用再登录，一般具有一个有效期，过期失效。</p><p>考虑到session具有有效期，作者编写代码的时候每次预定前先登录，预定完成后注销，这样<strong>最为简单，也最为安全，同时减少麻烦</strong>。注销代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&#123;List&lt;Header&gt; headerList&#x3D;new ArrayList&lt;Header&gt;();headerList.add(new BasicHeader(HttpHeaders.ACCEPT, &quot;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8&quot;));headerList.add(new BasicHeader(HttpHeaders.ACCEPT_ENCODING, &quot;gzip, deflate&quot;));headerList.add(new BasicHeader(HttpHeaders.ACCEPT_LANGUAGE, &quot;zh-TW,zh;q&#x3D;0.9,en-US;q&#x3D;0.8,en;q&#x3D;0.7,zh-CN;q&#x3D;0.6&quot;));headerList.add(new BasicHeader(HttpHeaders.CONNECTION, &quot;keep-alive&quot;));headerList.add(new BasicHeader(&quot;Cookie&quot;, &quot;PHPSESSID&#x3D;&quot;+getSessionId())); &#x2F;&#x2F;需要传入cookie里记录的sessionIdheaderList.add(new BasicHeader(HttpHeaders.HOST, &quot;cgzx.tju.edu.cn:8080&quot;));headerList.add(new BasicHeader(HttpHeaders.REFERER, &quot;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Login&#x2F;index.html&quot;));headerList.add(new BasicHeader(&quot;Upgrade-Insecure-Requests&quot;,&quot;1&quot;));headerList.add(new BasicHeader(HttpHeaders.USER_AGENT, &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;68.0.3440.84 Safari&#x2F;537.36&quot;));&#x2F;&#x2F;构造自定义的HttpClient对象HttpClient httpClient &#x3D; HttpClients.custom().setDefaultHeaders(headerList).build();URI uri &#x3D; new URIBuilder(Repository.logoutUrl).build(); &#x2F;&#x2F;此处需要填入注销的请求链接HttpUriRequest httpUriRequest &#x3D; RequestBuilder.get().setUri(uri).build();HttpResponse response &#x3D; httpClient.execute(httpUriRequest); &#x2F;&#x2F;执行注销...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里要注意登录要采用POST，之前写程序的时候错用成了GET，发现可以成功登录，但是最后预定的时候每次都失败。</p><h3 id="4-3-监听场地预约开放"><a href="#4-3-监听场地预约开放" class="headerlink" title="4.3 监听场地预约开放"></a>4.3 监听场地预约开放</h3><p>这个地方==是很重要的一个地方==，直接影响到了预约的效率，订到早了，系统没有开放权限，导致定不了；订的完了，被别人抢走了，之前作者不懂事，写了个定时器每天12:00:00准时开抢，发现一次都没有抢到，以后是程序不行，后来发现，妈蛋<font color="red"><strong>预约平台12:02分才放出预定信息</strong></font>，于是写了个监听函数，以便在第一时间预约，代码就两句，如下：</p><pre class="line-numbers language-none"><code class="language-none">&#123;while (!visit(Repository.testUrl).contains(day+&quot;&amp;&quot;))&#123;Thread.sleep(500); &#x2F;&#x2F;不能定就睡眠等待&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不要小看这两行代码，很NB的哦…</p><h3 id="4-4-寻找预约场地参数"><a href="#4-4-寻找预约场地参数" class="headerlink" title="4.4 寻找预约场地参数"></a>4.4 寻找预约场地参数</h3><p>登录之后，就可以进行相关的场地检索和预约了，这里没有必要一步一步按照第三章里的步骤访问网页，获取源代码，解析参数再拼接往后执行，清楚了各项参数的代表含义和取值范围，预定的事情就变得简单了。大家都知道，<font color="red"><strong>好钢要用在刀刃上</strong></font>，写程序的目的当时是要抢最热门最难抢的场地了，so，我们直接把参数定好，时间段定为19:00-21:00，场地定为1-8号场地，再拼接上要预定的日期，就可以进入确认预定页面了，代码如下：</p><pre class="line-numbers language-none"><code class="language-none">private void driver() throws IOException&#123;long curDateMills&#x3D;System.currentTimeMillis();&#x2F;&#x2F;获取当前时间String bookDate&#x3D;DateFormats.getInstance().LongToDate(curDateMills+48*3600*1000).substring(0,10);&#x2F;&#x2F;往后加2天String bookTime[]&#x3D;Repository.bookTime;&#x2F;&#x2F;要预定的时间段int bookPlace&#x3D;Repository.bookPlace;&#x2F;&#x2F;要预定的场地编号instance.startBooking(bookDate,bookTime,bookPlace);&#x2F;&#x2F;调用预定函数&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为每天可以预定两天后的场地，所以这里加2天</p><p>工作到目前为止完成了70%，接下来是==最重要的地方！！！==</p><p>进入了预定确认页面后，服务器返回一个数据结构，包含预定者的姓名、hash验证值、队列号等，我们需要把这些数据解析出来，然后作为参数作为执行的最后的预定请求，具体的获取方式可以通过抓包工具获得，这里只贴上对应的解析代码。</p><p>首先构造一个实体类，作为数据结构来封装传递数据：</p><pre class="line-numbers language-none"><code class="language-none">public class BookFormBean &#123;private String hash;private String CELL_PHONE;private String REAL_NAME ;private String CGINFO_ID;private String CDINFO_ID;private String CAMPUS_ID;private String SEQ_NO;private String PRICE;private String DISCOUNT;private String PRICE_FINAL;...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后请求预定确认页面的链接，采用Jsoup解析网页源码获取表单数据：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;*** 解析表单数据* return 封装好的实体类*&#x2F;private BookFormBean parseBean(String formStr)&#123;Document document &#x3D; Jsoup.parse(formStr);String hash &#x3D; document.select(&quot;inputname&#x3D;hash&quot;).attr(&quot;value&quot;);String CELL_PHONE &#x3D; document.select(&quot;inputname&#x3D;CELL_PHONE&quot;).attr(&quot;value&quot;);String REAL_NAME &#x3D; document.select(&quot;inputname&#x3D;REAL_NAME&quot;).attr(&quot;value&quot;);String CGINFO_ID &#x3D; document.select(&quot;inputname&#x3D;CGINFO_ID&quot;).attr(&quot;value&quot;);String CDINFO_ID &#x3D; document.select(&quot;inputname&#x3D;CDINFO_ID&quot;).attr(&quot;value&quot;);String CAMPUS_ID &#x3D; document.select(&quot;inputname&#x3D;CAMPUS_ID&quot;).attr(&quot;value&quot;);String SEQ_NO &#x3D; document.select(&quot;inputname&#x3D;SEQ_NO&quot;).attr(&quot;value&quot;);String PRICE &#x3D; document.select(&quot;inputname&#x3D;PRICE&quot;).attr(&quot;value&quot;);String DISCOUNT &#x3D; document.select(&quot;inputname&#x3D;DISCOUNT&quot;).attr(&quot;value&quot;);String PRICE_FINAL &#x3D; document.select(&quot;inputname&#x3D;PRICE_FINAL&quot;).attr(&quot;value&quot;);BookFormBean bean&#x3D;new BookFormBean(hash, CELL_PHONE, REAL_NAME, CGINFO_ID, CDINFO_ID, CAMPUS_ID, SEQ_NO, PRICE, DISCOUNT, PRICE_FINAL);return bean;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>封装表单数据，执行预定请求：</p><pre class="line-numbers language-none"><code class="language-none">&#123;Boolean result&#x3D;false;List&lt;NameValuePair&gt; formparams &#x3D; new ArrayList&lt;NameValuePair&gt;();&#x2F;&#x2F; 所传参数formparams.add(new BasicNameValuePair(&quot;hash&quot;, bean.getHash()));formparams.add(new BasicNameValuePair(&quot;CELL_PHONE&quot;, bean.getCELL_PHONE()));formparams.add(new BasicNameValuePair(&quot;REAL_NAME&quot;, bean.getREAL_NAME()));formparams.add(new BasicNameValuePair(&quot;CGINFO_ID&quot;, bean.getCGINFO_ID()));formparams.add(new BasicNameValuePair(&quot;CDINFO_ID&quot;, bean.getCDINFO_ID()));formparams.add(new BasicNameValuePair(&quot;CAMPUS_ID&quot;, bean.getCAMPUS_ID()));formparams.add(new BasicNameValuePair(&quot;SEQ_NO&quot;, bean.getSEQ_NO()));formparams.add(new BasicNameValuePair(&quot;PRICE&quot;, bean.getPRICE()));formparams.add(new BasicNameValuePair(&quot;DISCOUNT&quot;, bean.getDISCOUNT()));formparams.add(new BasicNameValuePair(&quot;PRICE_FINAL&quot;, bean.getPRICE_FINAL()));HttpEntity reqEntity &#x3D; new UrlEncodedFormEntity(formparams, &quot;utf-8&quot;);...HttpResponse response&#x3D;client.execute(post);if (response.getStatusLine().getStatusCode()&#x3D;&#x3D;200)&#123;&#x2F;&#x2F;HttpEntity resEntity &#x3D; response.getEntity();&#x2F;&#x2F;EntityUtils.consume(reqEntity);if(bean.getHash()&#x3D;&#x3D;null||bean.getHash().length()&#x3D;&#x3D;0)&#123;System.out.println(formats.getNowDate1()+&quot; 场馆已被他人预定 &quot;+confirmUrl);result&#x3D;false;&#125;&#125;else&#123;if(bean.getHash()!&#x3D;null&amp;&amp;bean.getHash().length()&gt;5)&#123;System.out.println(formats.getNowDate1()+&quot; 预定成功 &quot;+confirmUrl);result&#x3D;true;&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-5-失败重订机制"><a href="#4-5-失败重订机制" class="headerlink" title="4.5 失败重订机制"></a>4.5 失败重订机制</h3><p>但是我们也不能保证预定每次都能成功，万一你的网络卡一下，或者其它什么原因，导致预定失败，预定程序需要<font color="red"><strong>有一定的纠错能力</strong></font>，为此，我们设计了一套失败重顶机制，来保证订的场地已被预定，就选定其它场地，反正换来换去总能订到的嘛，代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&#123;for(int i&#x3D;0;i&lt;time.length;i++)&#123;tryNum&#x3D;0;while(tryNum&lt;8)&#123;tempConfirmUrl&#x3D;Repository.confirmUrl;tempConfirmUrl&#x3D;tempConfirmUrl.replace(&quot;D&quot;,day);tempConfirmUrl&#x3D;tempConfirmUrl.replace(&quot;T&quot;,timei);tempConfirmUrl&#x3D;tempConfirmUrl.replace(&quot;P&quot;,Integer.toString(bookPlace+tryNum));&#x2F;&#x2F;失败则尝试换个场地boolean result&#x3D;book(Repository.bookUrl,tempConfirmUrl,getSessionId(),parseBean(visit(tempConfirmUrl)));if(result&#x3D;&#x3D;false)&#123;tryNum++; &#x2F;&#x2F;预定失败，更新尝试次数&#125;else&#123;successResult++; &#x2F;&#x2F;预定成功，继续预定下一个时间段的场地break;&#125;&#125;&#125;if(successResult&gt;0)&#123;sendEmail(successResult);&#x2F;&#x2F;发邮件提醒用户&#125;else&#123;&#x2F;&#x2F;do nothing&#125;logOut();&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-6-邮件提醒功能"><a href="#4-6-邮件提醒功能" class="headerlink" title="4.6 邮件提醒功能"></a>4.6 邮件提醒功能</h3><p>对于预定成功的用户来讲，总不能没事还要登录系统去看一下是否成功了吧，于是就加了一个预定成功的邮件提醒功能，采用java mail包就能实现，代码也不多：</p><pre class="line-numbers language-none"><code class="language-none">#配置文件 sys.propertiesloginUrl&#x3D;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Login&#x2F;authCheck.htmllogoutUrl&#x3D;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Login&#x2F;logoutindexUrl&#x3D;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Book&#x2F;indexsearchBookedUrl&#x3D;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;QueryBill&#x2F;testUrl&#x3D;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Book&#x2F;index2.html?cg&#x3D;01&amp;cp&#x3D;02confirmUrl&#x3D;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Book&#x2F;index4?day&#x3D;D&amp;time&#x3D;T&amp;cg&#x3D;01&amp;cp&#x3D;02&amp;cdinfoid&#x3D;PbookUrl&#x3D;http:&#x2F;&#x2F;cgzx.tju.edu.cn:8080&#x2F;index.php&#x2F;Book&#x2F;Book&#x2F;order.htmluserName&#x3D;A,B,Cpassword&#x3D;a,b,cbookTime&#x3D;00012,00013bookPlace&#x3D;2201email protected,email protected,email protected<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为啥要用好几个账号呢？因为每个账号只能预定两个场地，未过期之前都不可以再预定新的，所以就没法了，只能多开几个号了</p><pre class="line-numbers language-none"><code class="language-none">public void sendEMail(String title,String body) throws InterruptedException&#123;for(String item:Repository.mailList)&#123;this.sendMessage(item, title, body);&#125;&#125;private void sendMessage(String to_address,String title,String body) &#123;String smtphost &#x3D; &quot;smtp.163.com&quot;; &#x2F;&#x2F; 发送邮件的服务器String user &#x3D; &quot;email protected&quot;; &#x2F;&#x2F; 邮件服务器登录用户名String password &#x3D; &quot;xxxxxxxxxxxx&quot;; &#x2F;&#x2F; 邮件服务器登录密码String from &#x3D; &quot;email protected&quot;; &#x2F;&#x2F; 发送人邮件地址Send(smtphost,user,password,from,to_address,title,body);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、效果评估"><a href="#五、效果评估" class="headerlink" title="五、效果评估"></a>五、效果评估</h2><p>根据在服务器上打包运行的一段时间的评测，发现运行状态还不错，下面是实际表现效果：<br><img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/178F166481F9499791A359EC0004745A/7582"><br>邮件通知：<br><img src="https://note.youdao.com/yws/public/resource/d7452ee9e67fb35cc63a452f1117cd99/xmlnote/A7067CB51B684AA2A282068026EAD286/7583"></p><p>代码地址：<br><a href="https://github.com/yananYangYSU/book">https://github.com/yananYangYSU/book</a></p><h2 id="六、个人建议"><a href="#六、个人建议" class="headerlink" title="六、个人建议"></a>六、个人建议</h2><p>为了减少像作者这样的人出现，预定平台可以考虑以下改进措施：</p><ol><li>增添登录验证码机制，提高脚本预约难度。</li><li>预定流程过于简单，建议引入加密机制，提高程序代码预约的复杂度。</li><li>增加反制措施，定时筛查服务器日志，对于频繁出现的IP或者账号进行封号等措施。</li><li>扫描订而不去的用户，超过一定阈值可以冻结账号一段时间。</li></ol><p>当然了，维护系统是要花钱的，作者的建议只是个人看法，可以忽略，哈哈哈哈</p><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><p><font color="red"><strong>科学技术是把双刃剑</strong></font>，我们使用的时候要以不影响别人正常使用为前提，比如把预定平台搞崩了，或者把场地都约完，不给别人留地方了，这些都是不好的行为，写这篇文章也希望大家学习为主，多了解些知识和技术，同时也锻炼下自己的语言组织和逻辑表达能力，嘻嘻…</p>]]></content>
      
      
      <categories>
          
          <category> 运动 </category>
          
          <category> 编程 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tju </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Emby打造你的高品质数字影院</title>
      <link href="2021/01/28/emby/"/>
      <url>2021/01/28/emby/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>什么是Emby？</p><blockquote><p>Emby是可用于将媒体流式传输到本地和通过Internet远程传输到各种设备的媒体服务器选项。它包含服务端和客户端。服务端用于整理电影和剧集，客户端连上服务端后就能播放这些影片。你可以将它视为自己的视频网站，您可以随身携带，甚至与家人和朋友共享。<br>用大白话说：它能够把你下载的各种视频进行整理，并且通过局域网或者互联网推送到你各个设备上。</p></blockquote></blockquote><p>类似的平台还有PLex、Jellyfin、Kodi等。</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>下面是成品展示：<br><img src="/2021/01/28/emby/1.png" alt="电影"><br><img src="/2021/01/28/emby/2.png" alt="剧集"><br><img src="/2021/01/28/emby/3.png" alt="剧集分季"><br><img src="/2021/01/28/emby/4.png" alt="手机端"></p><p>以上是我自己的Emby服务器的展示，只展示了电脑端和手机端的截图，事实上Emby支持特别多的终端，包括并不限于<code>Windows、Android、IOS、NAS、Xbox、Android TV等</code>，只有你想不到，没有它做不到。<br>下面的文章计划从以下几个方面来写，包括安装和使用，可能会分好几次更新完：</p><ul><li>Emby Sever的安装</li><li>浏览器播放</li><li>Windows使用</li><li>Android手机使用</li><li>iOS使用</li><li>macOS使用</li><li>Android TV使用</li><li>Apple TV使用</li><li>Xbox使用<h2 id="Emby服务端的安装"><a href="#Emby服务端的安装" class="headerlink" title="Emby服务端的安装"></a>Emby服务端的安装</h2></li></ul><p>进入Emby官网，选择你要安装的平台并下载安装包，不同平台安装过程的设置基本一样。我使用的是Synology NAS做为服务器，由于已经安装了，这里用Windows平台做演示。</p><p>如果你在NAS上安装，可以参考<a href="https://post.smzdm.com/p/aoo6zvk6/">这篇文章</a>。<br><img src="/2021/01/28/emby/5.png" alt="Emby支持的服务器端"></p><ol><li><p>选择语言<br><img src="/2021/01/28/emby/6.png"></p></li><li><p>设置用户名和密码，下面的账户连接不用管他，因为我们没有购买会员，我们将使用破解的方法白嫖。<br><img src="/2021/01/28/emby/7.png"></p></li><li><p>新建你的媒体库内容、显示名称、及文件夹的位置等。语言地区就选简体中文、中国就行。<br><img src="/2021/01/28/emby/8.png"><br>这里我们就设置好了一个电影的媒体库，你可以设置更多的分类，方法一样。<br><img src="/2021/01/28/emby/9.png"></p></li><li><p>首选元数据设置。<br><img src="/2021/01/28/emby/10.png"></p></li><li><p>其他设置，下一步即可。<br><img src="/2021/01/28/emby/11.png"><br><img src="/2021/01/28/emby/12.png"><br><img src="/2021/01/28/emby/13.png"></p></li><li><p>登录你设置的账户。<br><img src="/2021/01/28/emby/14.png"><br>这里我们刚设置好，我的文件夹里也没有东西，只是演示，所以是空的。<br><img src="/2021/01/28/emby/15.png"><br>以后随着你存的电影变多，就会是这样的界面了~<br><img src="/2021/01/28/emby/17.png"><br><img src="/2021/01/28/emby/16.png"></p></li><li><p>查看地址和设置，点击管理Emby Server进入后台，这里能看到内网访问地址为局域网地址加端口8096，外网是公网ip加端口8096。局域网内的设备都可以通过这个地址访问Emby Server。<br><img src="/2021/01/28/emby/19.png"><br><img src="/2021/01/28/emby/18.png"></p></li><li><p>到这里我们就安装好了，以后你只需要按照自己设置的文件夹吧你的影视资源放进去即可。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Emby </tag>
            
            <tag> Kodi </tag>
            
            <tag> 影音 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>歌单迁移（网易云、QQ音乐 TO Youtube Music、Apple Music）</title>
      <link href="2021/01/09/ge-dan-zhuan-yi/"/>
      <url>2021/01/09/ge-dan-zhuan-yi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这两天开了YouTube的印度区会员，家庭车一年不到34块钱，非常划算。YouTube Music的推荐算法非常赞，特别喜欢这个快选功能，选一首歌就能开启今天的歌单。所以想把网易云的歌单转移过来。<br><img src="/2021/01/09/ge-dan-zhuan-yi/1.jpg" alt="YouTube Music"></p><p>在GitHub上我找到了这个项目<a href="https://github.com/yueyericardo/Netease-to-Youtube-or-Spotify">Netease-to-Youtube-or-Spotify</a>，作者也开发了web版，下面介绍用法，非常方便。</p><h2 id="步骤内容"><a href="#步骤内容" class="headerlink" title="步骤内容"></a>步骤内容</h2><ol><li>复制你的网易云、QQ音乐的歌单ID</li><li>在项目作者Richard Xue的web工具中复制文字版歌单</li><li>利用TunemyMusic网站转移歌单</li></ol><h3 id="1-复制文字版歌单"><a href="#1-复制文字版歌单" class="headerlink" title="1. 复制文字版歌单"></a>1. 复制文字版歌单</h3><ul><li>打开<a href="https://yyrcd.com/2018/11/14/n2s-zh/#3-%E8%BD%AC%E7%A7%BB%E5%88%B0-Youtube-Music-or-Spotify-or-Apple-Music">网易云 / QQ音乐到Youtube Music, Spotify, Apple Music</a></li><li>根据网站提示复制歌单<br><img src="/2021/01/09/ge-dan-zhuan-yi/2.png" alt="复制歌单"><h3 id="2-转移歌单"><a href="#2-转移歌单" class="headerlink" title="2. 转移歌单"></a>2. 转移歌单</h3></li><li>打开<a href="https://www.tunemymusic.com/zh-cn/">TunemyMusic</a><br><img src="/2021/01/09/ge-dan-zhuan-yi/3.png" alt="TunemyMusic"></li><li>操作步骤<br>STEP 1: 选择来源从文本<br><img src="/2021/01/09/ge-dan-zhuan-yi/4.png" alt="TSTEP 1"><br>STEP 2: 粘贴刚刚复制的内容到文本框中，转换歌曲列表<br><img src="/2021/01/09/ge-dan-zhuan-yi/5.png" alt="TSTEP 2"><br>STEP 3: 选择目的地，这里我选择Youtube Music。登录自己的账户即可。<br><img src="/2021/01/09/ge-dan-zhuan-yi/6.png" alt="TSTEP 3"><br>STEP 4: 开始移动。完成后在Youtube Music就能看到我的歌单啦。<br><img src="/2021/01/09/ge-dan-zhuan-yi/7.png" alt="TSTEP 4"></li></ul><blockquote><p>感谢项目作者<a href="https://github.com/yueyericardo">Richard Xue</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影音 </tag>
            
            <tag> 网易云音乐 </tag>
            
            <tag> QQ音乐 </tag>
            
            <tag> Apple Music </tag>
            
            <tag> YouTube Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>京东每日自动签到</title>
      <link href="2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/"/>
      <url>2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/1.png"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文将一步步教大家使用Github上的Actions来进行京东一系列app和站点的每日签到，自动薅东哥羊毛。此处心疼东哥一东。<br>本教程参考了文末的文章，部分地方稍作修改。我做的时候使用原文的获取cookie的方法没有成功，这里换了一个方法。</p><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ul><li>京东账户</li><li>GitHub 账户</li><li>谷歌浏览器（用于获取cookie，多数其他浏览器均可）</li><li>Server酱（可选，主要用来推送签到结果）</li></ul><h1 id="教程思路"><a href="#教程思路" class="headerlink" title="教程思路"></a>教程思路</h1><ol><li>fork原作者<code>ruicky</code>的GitHub项目</li><li>修改脚本的cookie参数为自己的</li><li>基于 GitHub Actions 自动执行脚本</li><li>微信推送签到结果（可选）</li></ol><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p>通过此教程，你将每天凌晨定时签到，无需服务器，也不需要很多的开发，只需要简单的部署即可。另外因为京东 cookie 的原因，如果失效了只需要更改 GitHub 中 secret 中的 JD_COOKIE 即可，可以算是非常的简捷方便。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/2.jpg" alt="签到结果"></p><h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><p><strong>你的 cookie 存储在 GitHub 的 secrets 中所以，本人还有其他人是看不到，也无法使用的。敬请放心。</strong></p><h1 id="京东定时签到-GitHub-实现"><a href="#京东定时签到-GitHub-实现" class="headerlink" title="京东定时签到-GitHub 实现"></a>京东定时签到-GitHub 实现</h1><h2 id="1、Github代码fork"><a href="#1、Github代码fork" class="headerlink" title="1、Github代码fork"></a>1、Github代码fork</h2><p>相关的基础程序原作者都已经写好，大家可以直接 fork 代码到自己的项目中。</p><ul><li>打开 <a href="https://github.com/">GitHub</a>，登录自己的 GitHub 账户。</li><li>访问<code>ruicky/jd_sign_bot</code><a href="https://github.com/ruicky/jd_sign_bot">链接</a>，点击右上角的Fork按钮，复制到自己的仓库。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/3.jpg" alt="Fork"></li></ul><h2 id="2、京东cookie获取"><a href="#2、京东cookie获取" class="headerlink" title="2、京东cookie获取"></a>2、京东cookie获取</h2><ol><li><p>电脑浏览器打开京东网址： <a href="https://m.jd.com/">https://m.jd.com/</a></p></li><li><p>右下角点击<code>我的</code>，使用验证码登陆账号。<br>京东 Cookie 的有效期如果使用扫码登录的 1 天，使用手机验证码登录的 1 个月。建议使用手机验证码登录。每过一个月 Cookie 会过期，所以要定时去记得更新你的 Secrets 中的 JD_COOKIE, 否则，程序不能正常运行。</p></li><li><p>登陆完后，按<strong>f12</strong>，选择<code>Galaxy S5</code>。</p></li><li><p>然后点击右上方里面的<code>network</code>，点击灰色的（如图所示），然后重新点击“我的”，然后找到<code>log.gif?t=wg_wx.******</code>开头的点击进去</p></li><li><p>点击之后，下拉，找到<code>cookie</code>，然后复制就可以了，这个很长，记得<code>cookie</code>这一栏都复制了。这个备用。</p></li></ol><p><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/9.png" alt="复制Cookie"></p><h2 id="3、Github配置修改"><a href="#3、Github配置修改" class="headerlink" title="3、Github配置修改"></a>3、Github配置修改</h2><ul><li><p>在自己的仓库中打开fork过的项目，点击页面的<code>Settings</code>操作按钮。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/4.png" alt="Settings"></p></li><li><p>点击左侧的<code>Secrets</code>选项卡，点击页面右上角的<code>New repository secret</code>按钮。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/5.png" alt="Secrets"></p></li><li><p>填写 京东 cookie 的 secret 信息</p><pre class="line-numbers language-none"><code class="language-none">Name: JD_COOKIEValue: 复制好的你自己的京东cookie值填写完成后 点击 Add secret 按钮<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/6.png" alt="Cookie"></p></li><li><p>启动<code>Github Actions</code><br>点击功能栏中的<code>Actions</code><br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/7.jpg" alt="Actions"><br>点击绿色按钮，启用<code>Actions</code><br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/8.jpg" alt="Action!"></p></li></ul><h2 id="4、微信推送签到结果"><a href="#4、微信推送签到结果" class="headerlink" title="4、微信推送签到结果"></a>4、微信推送签到结果</h2><h3 id="Server酱配置"><a href="#Server酱配置" class="headerlink" title="Server酱配置"></a>Server酱配置</h3><p>「Server酱」，英文名「ServerChan」，是一款「程序员」和「服务器」之间的通信软件。使用 Server酱 前提是已有了 GitHub 账号，登录获取到 key 值，并绑定微信即可。然后会把每日签到的消息给你推送到微信中。</p><ol><li>打开 server 酱的官网[<a href="http://sc.ftqq.com/3.version]">http://sc.ftqq.com/3.version]</a></li><li>点击右上角的<code>登入</code>链接<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/10.jpg" alt="Server"></li><li>会跳入 GitHub 授权页，在该页面填入你在上方注册的 GitHub 账户即可<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/11.jpg" alt="Github绑定"></li><li>点击上方的<code>微信推送</code>链接， 然后点击页面中的<code>开始绑定</code><br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/12.jpg" alt="微信绑定"></li><li>掏出手机，打开微信，扫描屏幕上的二维码，如果未关注，先关注，然后在绑定即可。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/13.jpg" alt="微信绑定"></li><li>绑定后，点击上方的<code>发送消息</code>链接，就可以看到你自己的<code>SCKEY值</code>，保存下来，下面会用到。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/14.jpg" alt="Key"></li></ol><h3 id="Github推送配置"><a href="#Github推送配置" class="headerlink" title="Github推送配置"></a>Github推送配置</h3><ol><li><p>进入仓库的<code>Secrets</code>选项卡再次点击页面右上角的 New secret 按钮<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/5.png" alt="Secrets"></p></li><li><p>填写 server 酱<code>SCKEY值</code>的 secret 信息</p><pre class="line-numbers language-none"><code class="language-none">Name: PUSH_KEYValue: 你自己的server key值填写完成后 点击 Add secret 按钮<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/14.png" alt="Key"></p></li><li><p>启动<code>Action</code></p></li></ol><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>先说原理，目前的<code>GitHub Actions</code>配置的执行触发有 2 个：</p><ul><li>定时执行</li><li>推送更新代码执行<br>大家可以根据第二点的特性来进行测试。例如编辑 README.md 文档，增加个回车，然后提交，来进行触发。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/16.jpg"><br>然后查看<code>Actions</code>的日志看是否成功。<br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/17.jpg" alt="成功的日志"><br><img src="/2021/01/03/jing-dong-mei-ri-zi-dong-qian-dao/18.jpg" alt="错误的日志"></li></ul><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>Q: Actions 日志里面显示 Key 报错，怎么处理？<br>A: 那可能是你的 Cookie 的问题，查看是否粘贴错误，例如多粘其他参数什么的。（小技巧：可以把 key 复制出来在电脑的编辑器上看是否是 1 行）</p><p>Q：按照配置，没有看到 Actions 执行，也没收到提示？<br>A：首先查看你的 Actions 中是否启用。默认 Fork 的分支，是关闭的。然后在查看你的日志，看对应的错误是什么。再次看是否自己的代码跟我的最新的是否一致。</p><blockquote><p><strong>本文在下面文章的基础上略作修改：</strong><br>作者： ruicky<br>链接： <a href="https://ruicky.me/2020/06/05/jd-sign/">https://ruicky.me/2020/06/05/jd-sign/</a><br>作者： 同路人可乐<br>链接： <a href="https://www.bilibili.com/read/cv7597205/">https://www.bilibili.com/read/cv7597205/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将B站视频保存为本地mp4文件</title>
      <link href="2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/"/>
      <url>2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="下载B站mp4视频教程"><a href="#下载B站mp4视频教程" class="headerlink" title="下载B站mp4视频教程"></a>下载B站mp4视频教程</h1><p>本文是一个简单教程，一步步教大家把B站的视频保存为mp4格式。全文有以下几个部分：</p><ul><li>下载B站视频</li><li>将flv格式封装成mp4</li><li><strong><font color="red"> 内容更新，由于我姐说太麻烦，我就用pyhton写了一个小程序，一键下载并转换成MP4 </font></strong></li></ul><h2 id="一键下载"><a href="#一键下载" class="headerlink" title="一键下载"></a>一键下载</h2><p>这个小程序依托于youtube-dl和ffmpeg，实现直接粘贴就可以下载保存MP4文件。适用但不局限于B站。<br><a href="https://wws.lanzous.com/iJLvcjs7dsf">下载链接</a><br>解压后运行<code>B站mp4下载.exe</code>程序，复制B站视频链接，粘贴到窗口回车即可。自动下载保存mp4视频。<br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/10.png" alt="粘贴链接"><br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/11.png" alt="下载完成"><br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/12.png" alt="得到视频"></p><p>源代码分享：<a href="https://github.com/xiuxinY/BiliBili_Mp4_Download">Github地址</a></p><pre class="line-numbers language-none"><code class="language-none">from os import renameimport youtube_dlimport osimport timeclass GetItem(object):    def rename_hook(self, d):        if d[&#39;status&#39;] &#x3D;&#x3D; &#39;finished&#39;:            file_name &#x3D; &#39;&#123;&#125;.mp4&#39;.format(int(time.time()))            rename(d[&#39;filename&#39;], file_name)            ffmpeg &#x3D; &#39;ffmpeg.exe&#39;            fn &#x3D; file_name            output &#x3D; file_name + &#39;.mp4&#39;            cmd &#x3D; ffmpeg + &quot; -i &quot; + fn + &quot; -c copy &quot; + output            print(cmd)            res &#x3D; os.popen(cmd)            output_str &#x3D; res.read()            print(output_str)            print(&#39;下载完成&#123;&#125;&#39;.format(file_name))    def download(self, youtube_url):        ydl_opts &#x3D; &#123;            &#39;progress_hooks&#39;: [self.rename_hook],            &#39;outtmpl&#39;: &#39;%(id)s%(ext)s&#39;,        &#125;        with youtube_dl.YoutubeDL(ydl_opts) as ydl:            # 下载给定的URL列表            result &#x3D; ydl.download([youtube_url])if __name__ &#x3D;&#x3D; &#39;__main__&#39;:    getItem &#x3D; GetItem()    url_todo &#x3D; input(&quot;请输入您复制的视频链接：&quot;)    getItem.download(url_todo)input(&#39;按回车键退出~&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="视频下载"><a href="#视频下载" class="headerlink" title="视频下载"></a>视频下载</h2><h3 id="方法一、使用youtube-dl工具"><a href="#方法一、使用youtube-dl工具" class="headerlink" title="方法一、使用youtube-dl工具"></a>方法一、使用youtube-dl工具</h3><p>youtube-dl工具是一个小巧但非常强大的视频下载器，几乎支持所有的视频网站，详细具体的方法可以查看本人的一篇公众号文章：<a href="https://mp.weixin.qq.com/s?__biz=MzI1Nzc0Mzk0NQ==&mid=2247483676&idx=1&sn=b9f57d3bdf8610a573db396220a282bc&chksm=ea138c3add64052cbdd7eeef592f8f3c9c25d4f827395d7c247ebd55777bcb0949b228db1cdb&scene=126&sessionid=1609073297&key=e174d9f7b9ab855c606ce83b498eac5a06b58796b46208e6ebd2db05c6f9de3a358b0ba34368f512fb3103113538ef3f9b2e1483fa388c9fd6caa0c3b89ea94d463541591d92d4584462e596af99ab80dce3232161ca54a817806508183462df122fa5e2fa1f205c3b9379697a6d9aab93aa0d229e45a9ed27f9d9d00ea21187&ascene=1&uin=MTQ3MDIzODM3Ng==&devicetype=Windows+10+x64&version=6300002f&lang=zh_CN&exportkey=AW4O4NN9+mnPJbS0mAyuqBc=&pass_ticket=OOgTTQURXT6ylLw8fBNNMLjznIJ2ZV4QmNmywaj/jdoQd4Ll3rGAlFzIC1Ef0hiq&wx_header=0">使用youtube-dl下载视频网站的视频</a><br>使用这个工具下载B站视频非常简单，步骤如下：</p><ol><li><a href="https://wws.lanzous.com/iQTtDjs4s2b">下载该工具</a></li><li>放在任意一个文件夹（记住路径，如我存放在<code>D:\Downloads\Programs</code>）中，在CMD中打开本文件夹。</li></ol><ul><li>按win+R打开“运行”窗口，输入cmd，回车<br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/2.png" alt="cmd"></li><li>打开cmd后，进入这个文件夹，在cmd命令窗口输入：cd+空格+/D+空格+D:\Downloads\Programs 直接进入文件夹。根据自己的路径改动即可。<br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/3.png" alt="窗口显示的路径变为D:\Downloads\Programs"></li></ul><ol start="3"><li>复制要下载的B站视频链接，如 <code>https://www.bilibili.com/video/BV1k4411L7Ww?from=search&amp;seid=8545305112011299542</code></li><li>在CMD中输入<code>youtube-dl https://www.bilibili.com/video/BV1k4411L7Ww?from=search&amp;seid=8545305112011299542</code><br>这样的话你会得到一个flv格式的视频。</li></ol><p>注：把链接替换成你复制的即可，注意中间的空格。<br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/1.png" alt="下载完成"></p><h3 id="方法二、使用浏览器插件"><a href="#方法二、使用浏览器插件" class="headerlink" title="方法二、使用浏览器插件"></a>方法二、使用浏览器插件</h3><p>这个方法更直白一些，步骤如下：</p><ol><li>进入<a href="https://bilibili-helper.github.io/">哔哩哔哩助手官网</a>，给你的<code>谷歌浏览器</code>或<code>Edge</code>，或者其他任何能安装谷歌浏览器插件的浏览器，如国内一些360、搜狗等。（不推荐这种流氓浏览器）</li><li>根据官网介绍和<a href="https://shimo.im/docs/PXgDrXTGcXjtWjVX/read">官方教程</a>安装插件,也可以直接在应用商店搜索安装。<br><a href="https://microsoftedge.microsoft.com/addons/detail/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%8A%A9%E6%89%8B%EF%BC%9Abilibilicom-%E7%BB%BC%E5%90%88%E8%BE%85%E5%8A%A9%E6%89%A9/fcfebhekhbkhjjimonjmbgmkbclheaoh?hl=zh-CN">Edge浏览器安装链接</a><br><a href="https://chrome.google.com/webstore/detail/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%8A%A9%E6%89%8B%EF%BC%9Abilibilicom-%E7%BB%BC%E5%90%88%E8%BE%85%E5%8A%A9%E6%89%A9%E5%B1%95/kpbnombpnpcffllnianjibmpadjolanh?hl=zh-CN">谷歌浏览器安装链接</a></li></ol><p><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/4.png" alt="官网"><br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/5.png" alt="官方教程"><br>3. 安装好后打开B站，在要下载的视频页面点击助手，选择下载的清晰度下载即可。<br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/8.png" alt="下载按钮"></p><p>这样的话你同样会得到一个flv格式的视频。</p><h2 id="转换flv为MP4"><a href="#转换flv为MP4" class="headerlink" title="转换flv为MP4"></a>转换flv为MP4</h2><p>下载小工具：<a href="https://wws.lanzous.com/iiYCZjs4sba">一键无损重新封装为mp4</a></p><ol><li>解压后得到这几个文件<br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/9.png" alt="得到的文件"></li><li>把flv格式的视频用鼠标拖动到第二个图标上即可，有黑色的cmd窗口出现，然后自动关闭，MP4文件就已经封装完成了。<br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/6.png" alt="这个窗口很快啊！一闪而过"><br><img src="/2020/12/27/jiang-b-zhan-shi-pin-bao-cun-wei-ben-di-mp4-wen-jian/7.png" alt="得到mp4视频文件"></li></ol><h3 id="两种下载方法自行选择，效果一样。第一种不需要装插件，不详细的地方可以查看公众号文章；方法二很简单。"><a href="#两种下载方法自行选择，效果一样。第一种不需要装插件，不详细的地方可以查看公众号文章；方法二很简单。" class="headerlink" title="两种下载方法自行选择，效果一样。第一种不需要装插件，不详细的地方可以查看公众号文章；方法二很简单。"></a>两种下载方法自行选择，效果一样。第一种不需要装插件，不详细的地方可以查看公众号文章；方法二很简单。</h3>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> youtube-dl </tag>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown常用语法</title>
      <link href="2020/12/26/markdown-chang-yong-yu-fa/"/>
      <url>2020/12/26/markdown-chang-yong-yu-fa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none"># 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="粗体、斜体、删除线和下划线"><a href="#粗体、斜体、删除线和下划线" class="headerlink" title="粗体、斜体、删除线和下划线"></a>粗体、斜体、删除线和下划线</h1><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">*斜体* **粗体** ***加粗斜体*** ~~删除线~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><p><em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del></p><h1 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h1><h2 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">&gt; 文字引用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h2><blockquote><p>文字引用</p></blockquote><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">&#96;行内代码&#96; ​&#96;&#96;&#96; 多行代码多行代码 ​&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h2><p><code>行内代码</code><br>​<code>  多行代码 多行代码  ​</code></p><h1 id="公式块"><a href="#公式块" class="headerlink" title="公式块"></a>公式块</h1><h2 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">$$ 数学公式 $$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h2><p>$$ y = x $$</p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><h2 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">方法一：--- 方法二：+++ 方法三：***<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="示例-5"><a href="#示例-5" class="headerlink" title="示例"></a>示例</h2><hr><p>+++</p><hr><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">1. 有序列表项 * 无序列表项 + 无序列表项 - 无序列表项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例-6"><a href="#示例-6" class="headerlink" title="示例"></a>示例</h2><ol><li>有序列表项 </li></ol><ul><li>无序列表项 </li></ul><ul><li>无序列表项 </li></ul><ul><li>无序列表项<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h2 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">表头1|表头2 -|-|- 内容11|内容12 内容21|内容22<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例-7"><a href="#示例-7" class="headerlink" title="示例"></a>示例</h2>表头1|表头2 </li><li>|-|-<br>内容11|内容12<br>内容21|内容22<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="语法-8"><a href="#语法-8" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">方法一：[链接文字](链接地址 &quot;链接描述&quot;) 例如：[示例链接](https:&#x2F;&#x2F;www.example.com&#x2F; &quot;示例链接&quot;) 方法二：&lt;链接地址&gt; 例如：&lt;https:&#x2F;&#x2F;www.example.com&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例-8"><a href="#示例-8" class="headerlink" title="示例"></a>示例</h2>方法一：<a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80" title="链接描述">链接文字</a><br>例如：<a href="https://www.example.com/" title="示例链接">示例链接</a><br>方法二：&lt;链接地址&gt;<br>例如：<a href="https://www.example.com/">https://www.example.com/</a><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><h2 id="语法-9"><a href="#语法-9" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-none"><code class="language-none">![图片文字](图片地址 &quot;图片描述&quot;) 例如：![示例图片](https:&#x2F;&#x2F;www.example.com&#x2F;example.PNG &quot;示例图片&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="示例-9"><a href="#示例-9" class="headerlink" title="示例"></a>示例</h2><img src="/2020/12/26/markdown-chang-yong-yu-fa/1.jpg" alt="图片示例"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 写文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> MD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo常用命令</title>
      <link href="2020/12/26/hexo-chang-yong-ming-ling/"/>
      <url>2020/12/26/hexo-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1、新建文章"><a href="#1、新建文章" class="headerlink" title="1、新建文章"></a>1、新建文章</h2><pre class="line-numbers language-none"><code class="language-none">hexo new post &quot;article title&quot;hexo clhexo ghexo shexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>梭哈</p><pre class="line-numbers language-none"><code class="language-none">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;backup&quot; &amp;&amp; git push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、备份文件"><a href="#2、备份文件" class="headerlink" title="2、备份文件"></a>2、备份文件</h2><pre class="line-numbers language-none"><code class="language-none">git add . git commit -m &quot;backup&quot; git push origin master <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3、还原文件"><a href="#3、还原文件" class="headerlink" title="3、还原文件"></a>3、还原文件</h2><p>git强制覆盖</p><pre class="line-numbers language-none"><code class="language-none">git fetch --allgit reset --hard origin&#x2F;mastergit pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>单条执行</p><pre class="line-numbers language-none"><code class="language-none">git fetch --all &amp;&amp;  git reset --hard origin&#x2F;master &amp;&amp; git pull<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NIST使用说明</title>
      <link href="2020/12/23/nist-shi-yong-shuo-ming/"/>
      <url>2020/12/23/nist-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NIST数据库软件使用说明"><a href="#NIST数据库软件使用说明" class="headerlink" title="NIST数据库软件使用说明"></a>NIST数据库软件使用说明</h1><p>##更新时若无数据库更新，只需替换新的exe文件即可。</p><h2 id="v2-0更新内容（2020年12月25日）Merry-Christmas"><a href="#v2-0更新内容（2020年12月25日）Merry-Christmas" class="headerlink" title="v2.0更新内容（2020年12月25日）Merry Christmas"></a>v2.0更新内容（2020年12月25日）<font color="red">Merry Christmas</font></h2><p>-<strong><font color="red"> 2.0大版本更新，带来全新的GUI界面</font></strong><br>-自由查询，不再受每次运行只能查询一个条目的限制<br>-将报告和曲线拟合绘图分开</p><h2 id="v1-5更新内容（2020年12月23日）"><a href="#v1-5更新内容（2020年12月23日）" class="headerlink" title="v1.5更新内容（2020年12月23日）"></a>v1.5更新内容（2020年12月23日）</h2><ul><li>更改绘图和报告的顺序，并把是否绘图作为可选项。</li></ul><h2 id="v1-4更新内容（2020年12月23日）"><a href="#v1-4更新内容（2020年12月23日）" class="headerlink" title="v1.4更新内容（2020年12月23日）"></a>v1.4更新内容（2020年12月23日）</h2><ul><li>无匹配等温线时不再报错闪退</li></ul><h2 id="v1-3更新内容（2020年12月22日）"><a href="#v1-3更新内容（2020年12月22日）" class="headerlink" title="v1.3更新内容（2020年12月22日）"></a>v1.3更新内容（2020年12月22日）</h2><ul><li>增加了匹配等温线后显示的详细内容，包括 [名称、温度、文献、期刊、作者、DOI]</li><li>增加了等温线绘图时基于<em>Langmuir</em>模型的拟合曲线</li><li>绘图完成后在根目录生成Excel格式查询结果 [查询概要、详细数据]</li></ul><h2 id="v2-0使用教程"><a href="#v2-0使用教程" class="headerlink" title="v2.0使用教程"></a>v2.0使用教程</h2><h3 id="1、程序下载"><a href="#1、程序下载" class="headerlink" title="1、程序下载"></a>1、程序下载</h3><p>在NAS中<code>\\Adsor-NAS\吸附量数据\NIST2021程序</code>文件夹中下载最新压缩包至电脑并解压。</p><blockquote><p>本地存放路径不可有中文。</p></blockquote><p><img src="/2020/12/23/nist-shi-yong-shuo-ming/10.png" alt="下载文件夹"></p><h3 id="2、查询等温线"><a href="#2、查询等温线" class="headerlink" title="2、查询等温线"></a>2、查询等温线</h3><p>在解压后的文件夹中找到并双击打开NIST Tool.exe文件<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/11.png" alt="main.exe"><br><strong><font color="red"> 启动时需要加载python依赖，启动时间较长，耐心等待。 </font></strong><br><img src="/2020/12/23/nist-shi-yong-shuo-ming/12.png" alt="软件界面"><br>在搜索框内分别输入吸附质、吸附剂的化学式或名称，双击框中候选项选定目标，框下方提示选取结果。无顺序限制。</p><blockquote><p>如：查询乙烯在NaY上的吸附量：</p></blockquote><p><img src="/2020/12/23/nist-shi-yong-shuo-ming/13.png" alt="选取结果"><br>选定吸附质和吸附剂后点击<strong>搜一下！</strong>，显示匹配等温线名称，在下方将显示个数。<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/14.png" alt="等温线查询结果"><br>点击<strong>生成报告</strong>可在文件目录生成Excel格式报告，报告内容与软件V1版本相同。<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/15.png" alt="生成报告"><br>Excel报告文件中包括两个sheet，Summary：所查询得到的等温线概要；Datas：等温线数据<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/16.png" alt="Summary"><br><img src="/2020/12/23/nist-shi-yong-shuo-ming/17.png" alt="Datas"><br>点击绘制曲线，逐一展示Langmuir模型等温线拟合绘制窗口，关闭一个会显示下一个，直至全部输出。通过窗口按键可以进行保存等操作。<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/18.png" alt="绘图输出窗口"><br><strong><font color="red"> 极少数曲线会拟合失败无法绘图。 </font></strong><br>####查询其他条目仅重新选择变化条目即可。</p><h6 id="请大家提出建议，出现报错闪退截图发给我。共同进步"><a href="#请大家提出建议，出现报错闪退截图发给我。共同进步" class="headerlink" title="请大家提出建议，出现报错闪退截图发给我。共同进步"></a>请大家提出建议，出现报错闪退截图发给我。共同进步</h6><h2 id><a href="#" class="headerlink" title></a></h2><p>##<del><strong>(下文已废弃)</strong></del></p><h2 id="v1-0使用教程"><a href="#v1-0使用教程" class="headerlink" title="v1.0使用教程"></a><del>v1.0使用教程</del></h2><h3 id="1、程序下载-1"><a href="#1、程序下载-1" class="headerlink" title="1、程序下载"></a>1、程序下载</h3><p>在NAS中<code>\\Adsor-NAS\吸附量数据\NIST2021程序</code>文件夹中下载最新压缩包至电脑并解压。<br><a href="http://192.168.31.111:5000/sharing/67WAMbNsD">337&amp;338直达下载</a></p><blockquote><p>本地存放路径不可有中文。</p></blockquote><p><img src="/2020/12/23/nist-shi-yong-shuo-ming/1.png" alt="下载文件夹"></p><h3 id="2、索引等温线"><a href="#2、索引等温线" class="headerlink" title="2、索引等温线"></a>2、索引等温线</h3><p>在解压后的文件夹中找到并双击打开main.exe文件<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/2.png" alt="main.exe"><br>出现下面界面为正常启动，如果闪退就是自己电脑有问题。<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/3.png" alt="启动界面"><br>选取吸附质和吸附剂，注意化学式输入大写。<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/4.png" alt="选取界面"></p><h3 id="3、自动绘图并生成报告"><a href="#3、自动绘图并生成报告" class="headerlink" title="3、自动绘图并生成报告"></a>3、自动绘图并生成报告</h3><p>程序会根据所选吸附质、吸附剂匹配对应等温线，同时输出下面的信息 </p><blockquote><p>[名称、温度、文献、期刊、作者、DOI]</p></blockquote><p><img src="/2020/12/23/nist-shi-yong-shuo-ming/5.png" alt="信息输出"></p><p>随后弹出等温线曲线绘制窗口，关闭一个会显示下一个，直至全部输出。通过窗口下面的按键可以进行保存等操作。<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/6.png" alt="绘图输出窗口"><br>绘图完毕后在程序所在文件夹中会生成以下Excel文件，报告出查询结果。</p><blockquote><p>日期-吸附质-吸附剂.xlsx</p></blockquote><p><img src="/2020/12/23/nist-shi-yong-shuo-ming/7.png" alt="报告文件"><br>Excel报告文件中包括两个sheet，Summary：所查询得到的等温线概要；Datas：等温线数据<br><img src="/2020/12/23/nist-shi-yong-shuo-ming/8.png" alt="Summary"><br><img src="/2020/12/23/nist-shi-yong-shuo-ming/9.png" alt="Datas"></p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NIST </tag>
            
            <tag> Python </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
